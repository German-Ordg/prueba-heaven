<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="picError.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAACAAAAAgCAYAAABzenr0AAAABGdBTUEAALGPC/xhBQAAACBjSFJNAAB6
        JgAAgIQAAPoAAACA6AAAdTAAAOpgAAA6mAAAF3CculE8AAAACXBIWXMAAOw4AADsOAFxK8o4AAAEl0lE
        QVRYR9WWXUxTZxjHX5iWME0mSKtsSRFXkBbaMgvYDzYKAioKZSAWWpQidlGXCW7Tm13sjmy7wN0sbolz
        S7Z4YXY7MyPLsrklCssmnzo5/QaGZh/ZdjFxuLPnf3pQwLd8tG7JnuSXvnnP8/z/zznnOW/K/lcRaW+O
        4nUrwl63KvxCq1rC61Zib7KjmU12tMjZjyjG2/cx38ljjEwyiIZwh6snfLD5QqitaTh0oDEkQWvs0bVT
        lOMIe1vXTx0/yoJtTbJKnEFiYH34kKuTTPqD+/ZM++u2i76dpaKwfZsolBdHoTX2cC3o3HOHcq+gBo1A
        Y8VBhWz8pQ6Y20ns80DDjhlflUUce/YZccxmjFJaOJ/ZfcpBLmpQSxpl48cOSZrLijC9w4i3NZl+PcHm
        uknfDtsDg1imvH36RW2wpW6CtNw0K9CUXWIEuryR9xSa8AT27vpZsBfxDQihzCQGnq+WwJqXg1rBXiwG
        mmp+Ik2Xf3f54k8i3O5k9O7KyXwipigg4UB9tfjnyKAE1rEaBUJZkRjYWxMhbTs8uEEXWeRIWwYNWi+6
        5gndx2oQA427xL9uTUlgjT1urgyGlbQvRY54MuA1L0IHW1jAUclC+xs7fdW2e4vdjUQcDUAT2qH9DUdp
        QFlk7jxgOCKH25T0GfVJk84TmEs8DQDSDjiqrtJTUM4bSPp2WchV3yBUmqe5hQuJtwFCqLRMB131jqCz
        NmoeoaEYUqYwuvuesee2coseIoEG4OGvrei+rtlAr4EGko5QNnH8sMJXZb3ALeCRSAMEnQ+fTpx4UQFv
        Fmxx0ON3qISKkmFeMpcEG4BXkDwJxvy77UBN332Il8wl0QbIC57wZrQB1MR/1gABL3gydrkkn31dkr/h
        us04MidhcRJsAF7w/Ko4n7GeLVkgdchquMRL5pJgA/CC5ynyZrq1qUwURfadRf8OL5kLnWp+Ov9/HxqQ
        wHrJ03MO/eaCHvHyGaZdkxo9C36rKGa9Jq37B1vhXV4Bjxv0PX+5s0wCa14OD3h8UaRzTtlNUXPEe7rN
        7I0ctXrAYhjgFfG4SXc8ai6QwJqXw+OaxXDtzVy1+rQuW3anyExZjZ+k3iLt6zdLC//mFS5kWf8HFkDa
        9y6atK/Ba2PU80F8YsxlXVmZOd+a9VcETvE86I5hfGd0WALrpWYAmtB+ZVOm5pxeI7s+HEnv5292jliN
        t3ki9yEzDN4f9GcELGcISfPWGdKGR9SKE/giKNacM2hO0Lf6K09olpUMIWn98pFe0wVt3ezkx4q3ctVM
        pVid/rFec3LUZrwd63XQ+xRHLXoJrHk5qMWdf1jw9MtKxaq0Vzdlyi7LiJTk5HVvb8ny9Jv1V0lsZsm5
        mIOcO0O1fXTgHFAkJz0hy644Hq9XpRedN+R0f2/RD9Od3oU4r5nZfcqZptzB88acbtRCIyoVfzxGpNcq
        08zv6rK7LpryPujbVvDNoNXgo8c7Rfw4aDEI2Ptsa97Z09rszpqMdSWokWsfWUBsbTIdG9mpKVqHKs3m
        eVJZBeqUaVbs0bWNyJFz/9XAp7SKwGkCsI79ecUMxv4B1wFo6UsvI5UAAAAASUVORK5CYII=
</value>
  </data>
</root>